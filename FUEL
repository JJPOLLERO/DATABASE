<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>TSRO Gas Station</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter&display=swap" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #e8f5e9;
      margin: 0;
      padding: 0;
    }

    header {
      background-color: #1b5e20;
      color: white;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 15px 20px;
      flex-wrap: wrap;
    }

    .header-left {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .header-left h1 {
      font-size: 1.8rem;
      margin: 0;
    }

    .header-icons {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    .header-icons i {
      font-size: 1.5rem;
      cursor: pointer;
    }

    .container {
      padding: 20px;
    }

    .machine-section {
      background: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 30px;
    }

    .machine-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }

    .machine-header h2 {
      margin: 0;
    }

    .fuel-table {
      margin-bottom: 30px;
    }

    .fuel-table h3 {
      margin-bottom: 10px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }

    table, th, td {
      border: 1px solid #ccc;
    }

    th, td {
      padding: 10px;
      text-align: center;
    }

    table th:nth-child(5),
    table td:nth-child(5) {
      width: 100px;
    }

    table th:nth-child(4),
    table td:nth-child(4) {
      width: 80px;
    }

    .add-transaction-form {
      margin-top: 10px;
    }

    .add-transaction-form input[type="number"] {
      width: 120px;
      padding: 5px;
      margin-right: 10px;
    }

    .add-transaction-form button {
      padding: 6px 12px;
      background-color: #388e3c;
      color: white;
      border: none;
      cursor: pointer;
    }

    .total-row {
      font-weight: bold;
      background-color: #f1f8e9;
    }

    .add-button {
      display: flex;
      justify-content: center;
      margin-top: 20px;
    }

    .add-button button {
      background-color: #388e3c;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 50%;
      font-size: 1.5rem;
      cursor: pointer;
    }

    .stock-input {
      width: 100px;
      padding: 5px;
      margin-top: 10px;
    }

    .remove-button {
      background-color: #d32f2f;
      color: white;
      border: none;
      padding: 4px 8px;
      cursor: pointer;
      font-size: 0.9rem;
      border-radius: 5px;
    }

    .min-max-button, .add-fuel-type-button {
      background-color: #388e3c;
      color: white;
      padding: 5px 10px;
      border: none;
      cursor: pointer;
      margin-bottom: 10px;
      font-size: 0.9rem;
      border-radius: 5px;
    }
  </style>
</head>
<body>
  <header>
    <div class="header-left">
      <i class="fas fa-gas-pump"></i>
      <h1>TSRO GAS STATION</h1>
    </div>
    <div class="header-icons">
      <i class="fas fa-user-circle" title="Profile"></i>
      <i class="fas fa-box" title="Products"></i>
      <i class="fas fa-truck" title="Delivery History"></i>
      <i class="fas fa-cash-register" title="Sales"></i>
    </div>
  </header>

  <div class="container" id="machines-container"></div>

  <div class="add-button">
    <button onclick="addMachine()"><i class="fas fa-plus"></i></button>
  </div>

  <script>
    let machineCount = 0;
    let customFuelId = 0;

    function addMachine() {
      machineCount++;
      const container = document.getElementById("machines-container");

      const section = document.createElement("div");
      section.className = "machine-section";
      section.id = `machine-${machineCount}`;

      section.innerHTML = `
        <div class="machine-header">
          <h2><i class="fas fa-gas-pump"></i> Machine ${machineCount}</h2>
        </div>
        <div id="fuel-types-container-${machineCount}"></div>
        <button class="add-fuel-type-button" onclick="addFuelType(${machineCount})">Add Fuel Type</button>
      `;

      container.appendChild(section);

      // Add default fuel types
      addFuelType(machineCount, "Unleaded", true);
      addFuelType(machineCount, "Diesel", true);
    }

    function addFuelType(machineId, fuelType = null, isDefault = false) {
      if (!isDefault) {
        fuelType = prompt("Enter fuel type name:");
        if (!fuelType || fuelType.trim() === "") return;
        fuelType = fuelType.trim();
      }

      const fuelTypesContainer = document.getElementById(`fuel-types-container-${machineId}`);
      const safeFuelType = fuelType.replace(/\s+/g, "_"); // for use in IDs
      customFuelId++;

      const fuelDiv = document.createElement("div");
      fuelDiv.className = "fuel-table";
      fuelDiv.id = `fuel-type-${machineId}-${safeFuelType}-${customFuelId}`;

      fuelDiv.innerHTML = `
        <h3>${fuelType}</h3>
        <button class="min-max-button" onclick="toggleTable(${machineId}, '${safeFuelType}-${customFuelId}')">Maximize</button>
        <form class="add-transaction-form" onsubmit="addTransaction(event, ${machineId}, '${safeFuelType}-${customFuelId}')">
          <label>Price per Liter (₱):</label>
          <input type="number" step="0.01" required id="price-${machineId}-${safeFuelType}-${customFuelId}" value="60" />
          <label>Amount (₱):</label>
          <input type="number" step="0.01" required id="amount-${machineId}-${safeFuelType}-${customFuelId}" />
          <button type="submit">Add</button>
        </form>
        <table id="table-${machineId}-${safeFuelType}-${customFuelId}" class="transaction-table">
          <thead>
            <tr>
              <th>#</th>
              <th>Amount (₱)</th>
              <th>Liters</th>
              <th>Remove</th>
              <th>Date</th>
            </tr>
          </thead>
          <tbody></tbody>
          <tfoot>
            <tr class="total-row">
              <td colspan="2">Total Amount:</td>
              <td id="total-amount-${machineId}-${safeFuelType}-${customFuelId}">₱0.00</td>
            </tr>
            <tr class="total-row">
              <td colspan="2">Total Liters:</td>
              <td id="total-liters-${machineId}-${safeFuelType}-${customFuelId}">0.00</td>
            </tr>
            <tr class="total-row">
              <td colspan="2">Total Stock:</td>
              <td>
                <input type="number" class="stock-input" id="stock-${machineId}-${safeFuelType}-${customFuelId}" value="1000" onchange="updateStock(${machineId}, '${safeFuelType}-${customFuelId}')" />
              </td>
            </tr>
          </tfoot>
        </table>
      `;

      fuelTypesContainer.appendChild(fuelDiv);
    }

    function toggleTable(machineId, fuelKey) {
      const table = document.getElementById(`table-${machineId}-${fuelKey}`);
      const button = table.previousElementSibling.previousElementSibling;
      const rows = table.querySelector("tbody").rows;

      const isMaximized = button.innerText === 'Minimize';

      if (isMaximized) {
        enforceLastThreeRowsVisible(table);
        button.innerText = 'Maximize';
      } else {
        for (let row of rows) row.style.display = '';
        button.innerText = 'Minimize';
      }
    }

    function enforceLastThreeRowsVisible(table) {
      const rows = table.querySelector("tbody").rows;
      for (let i = 0; i < rows.length; i++) {
        rows[i].style.display = i >= rows.length - 3 ? '' : 'none';
      }
    }

    function addTransaction(event, machineId, fuelKey) {
      event.preventDefault();

      const amountInput = document.getElementById(`amount-${machineId}-${fuelKey}`);
      const priceInput = document.getElementById(`price-${machineId}-${fuelKey}`);

      const amount = parseFloat(amountInput.value);
      const price = parseFloat(priceInput.value);

      if (isNaN(amount) || amount <= 0 || isNaN(price) || price <= 0) return;

      const table = document.getElementById(`table-${machineId}-${fuelKey}`);
      const newRow = table.querySelector("tbody").insertRow();
      const liters = amount / price;
      const date = new Date().toLocaleString();

      newRow.innerHTML = `
        <td>${table.rows.length}</td>
        <td>₱${amount.toFixed(2)}</td>
        <td>${liters.toFixed(2)}</td>
        <td><button class="remove-button" onclick="removeTransaction(event, ${machineId}, '${fuelKey}')">Remove</button></td>
        <td>${date}</td>
      `;

      updateTotal(machineId, fuelKey);
      enforceLastThreeRowsVisible(table);
      updateStockAfterTransaction(machineId, fuelKey, liters);
      amountInput.value = '';
    }

    function removeTransaction(event, machineId, fuelKey) {
      const row = event.target.closest("tr");
      const liters = parseFloat(row.cells[2].textContent);
      row.remove();
      const table = document.getElementById(`table-${machineId}-${fuelKey}`);
      updateTotal(machineId, fuelKey);
      enforceLastThreeRowsVisible(table);
      updateStockAfterTransaction(machineId, fuelKey, -liters);
      resetRowNumbers(table);
    }

    function updateTotal(machineId, fuelKey) {
      const table = document.getElementById(`table-${machineId}-${fuelKey}`);
      const rows = table.querySelector("tbody").rows;

      let totalAmount = 0, totalLiters = 0;

      for (let row of rows) {
        const amount = parseFloat(row.cells[1].textContent.replace('₱', ''));
        const liters = parseFloat(row.cells[2].textContent);
        totalAmount += amount;
        totalLiters += liters;
      }

      document.getElementById(`total-amount-${machineId}-${fuelKey}`).textContent = `₱${totalAmount.toFixed(2)}`;
      document.getElementById(`total-liters-${machineId}-${fuelKey}`).textContent = totalLiters.toFixed(2);
    }

    function resetRowNumbers(table) {
      const rows = table.querySelector("tbody").rows;
      for (let i = 0; i < rows.length; i++) {
        rows[i].cells[0].textContent = i + 1;
      }
    }

    function updateStockAfterTransaction(machineId, fuelKey, litersChange) {
      const stockInput = document.getElementById(`stock-${machineId}-${fuelKey}`);
      let stock = parseFloat(stockInput.value);
      if (!isNaN(stock)) {
        stock -= litersChange;
        stockInput.value = stock.toFixed(2);
      }
    }
  </script>
</body>
</html>
